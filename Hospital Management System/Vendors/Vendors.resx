<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="GroupBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
        JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAA1AZkDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDr91G6od9Rz3KW9vJPIcJGpdvoBmvo7Hmi3eo2tiqm4k2lvuqA
        WY/QDmsifxjZwSbfsd66f89FRcfqwP6Vz+sakHjhhtp4X1a+kVDz/qtxwq59Bn+Z71Pqnww1C2jD/wBv
        eY55IaEqM/8AfVeNic0VJ32R20sI5+p1Gn6/p2pSmK3n/fAbvKcFWx6gHr+FaO6vLI/C93Zajb3dzqO4
        28iv+6BDEA9Ae1emCQMAQQQeQRXXgcbDFxbi9jHEUJUWr9SfdRuqHfRvrusc5Nuo3VDvo30WAm3Ubqh3
        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
        GaM0UUAf/9k=
</value>
  </data>
  <data name="Button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAyhJREFUOE91
        03tIlXcYB/Dnfc97fz33Oe2glSeznI6Jo0zL09VqYzrUYpRbqbSwxG5EURFFRklCVGp5qdMFhpdsUnkU
        omRWTEloDQ3axT90a5pBf2wRZ7j17TnGiZB64fvX73k+7/P84EcnLSKFck5XyS8KFEcU3WIRN92Nj+v5
        KX1OMJQ78XH3Gi1iWQyRp5Zrqri2nHu2EH+TgIKBZT6MVx0HAteA212v03kd4zUn0L/UBwaK3wccHC0q
        wEt/Lf73N+CfinI82l6Kh1tLMHb4AP6rq+azeowUF4CBY5MnWPH7l5/hxe4deLp1MwLz01BiGn9lEtV9
        SlRTYjf/6FuSidF1axDctQ2/ZGeBgfyJFQ7xTt/Hx2AoLwcDudk4PyMGHxOtYoAYoBdOB/VER/fem5eK
        weyVeJSzEsNcd8EbizCwuDspAZ3JibiaOBMp3MwABQyZfjW1EPDgt9Rk9H8Uj/aFGTiTMQc3Zs/ALU6h
        KORRhSbXtjutaODstZrPGaBKQwgDD3ojbeixKbg8PRKZEZo/R7OMVkUoaHeYWKdIrbTHULqrdQVHTRXf
        KFITJwzc77Kp6NYENEVGIMWQmxmg9bJYv8+UcVGzYKMq9VOZrtw8ws2FqoivLUJTiU0NAfdbTAs6dAFt
        Th0+XWpmgIr0iXy33q7jCANfqdLP9K0iVV5wGNhmIex0218y0FOnElo0QrspYbUiNjNApZpKG2SJCt02
        lFlVVPMUSyTxEq0VhE/8LivOyQJqprjR4jQQYKBXE7FZFBoZoFbvtDCwpcIbjbN83mDT4BGErBBApYY6
        0ucy0CYROgwBfXFTUC5JV2ocNvK7XGFgf8MsLwJ8Lz9aZRRp8jgDRD6+dU7iKWcEht0G7jpU/DDbi3pP
        FBgYOO9yPeQJ0JWcgN4oOwYdGqr47x8QZXDeADRLoNzTvMqfsZF4nODB3xmpCH6+CP9mL8fzrHSMJXkx
        NM2NaruJ6QIVh5onAxRLlLRBV4c7vB48WTAXwfwvEFyVgzFfGjq9U1GsKc/cRPMZmGh+F0D8ZKM+JEpL
        F6gyX5E78zjp/Gi52Bc6Y4DeBl4B/zhcvbalbeYAAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEACADADgAAFgAAACgAAAAwAAAAYAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA////AC9iAAA2bQYARnUcAE5/IQBJeB8AOXQLAD50EgA8bhQAV4UwAGCQOgBtmUoAJlsAAER8
        GwBJeCcA7v/jAESFHACStnsA6vTkAEqOJACpyJgAUJYtAHyjaABXnjcAnMeIAGGtRgA8bS8Abb5XANj8
        zwDM/cIAetFqAMfzvwDJ7sMAs9euAOL/3gBij14Al7uUANn+1wC+770A5P/jAFuJXQDM8c4A6P7pAN3/
        3wDu/+8A6vXrACtZNwDS7tkA9Pv2ALnjxwCnzr4AdaKWAJG+swBMe3IAfq+nAG6amADN//8A0/7+AMDy
        9ADB+fwAxvf5AMr2+QC39PsAseTqALTv9wCg4O4Apuf0AJnd7gCS2/AAAKbZAACg0wAAm84AitTqAKTK
        1gAAl8oAAJXIAACTxgAAkMMAAI7BAACMvwAAibwAAIi7AHXH5AAAh7oAAIS3AACDtgAAgrUAAIG0AACA
        swAAfrEAAHyvAAB6rQBSsdkAcLfTAAB4qwAAd6oAAHapAAB1qAAAdKcAAHOmAABypQAAcaQAAHCjAABv
        ogAAbqEAAG2gAAU4UABEpdIAAGyfAABrngAAap0AAGmcAABomwAAZ5oAAGaZAABlmAAAZJcAAGOWAABi
        lQAukcQAMpfLADOZzAA2oNMANp3PAABhlAAAYJMAAF+SAABekQAAXZAAAFyPAABZjAAAWIsADUJeACiC
        tAAri78AJnmpABpLZgBBjLUAW4OYAABXjQAAVokAAFSHAABShQAAUIMAHnKmAOT1/wAAUYgAAE6BAABL
        fgAASXwAF2ebABZilgAcaZwAHm+jAB9klAAjUnMARXORAABLgAAARnoAAER3AAU8YwAMVo4AD1KFABRd
        kQAUWIoAI2KPADplhAAARn4AAEF0AABAcwAAPnEAAD1wAAI1YAAHTocABkJ1AAg7ZAANTYEAZJS8ANru
        /wAAO24AADhrAAA3agADPnMABDdjAAtMiAAKRHcAC0Z5ABdKdwAvWHwAMlyAAFWFrwBun8kAzeX7AAA6
        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
        AAAA6/q4+usAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//+AAf//AAD8AAAAH/8AAPgAAAAAHwAA+AAAAAAf
        AAD4AAAAAB8AAPgAAAAAHwAA+AAAAAAfAAD4AAAAAB8AAPgAAAAAHwAA+AAAAAAfAAD8AAAAAB8AAPwA
        AAAAHwAA/AAAAAAfAAD8AAAAAB8AAP4AAAAAPwAA/gAAAAA/AAD+AAAAAD8AAP4AAAAAPwAA/wAAAAB/
        AAD/AAAAAH8AAP+AAAAA/wAA/4AAAAD/AAD/wAAAAf8AAP/gAAAD/wAA//gAAAf/AAD//AAAP/8AAP//
        gAH//wAA///AD///AAD//4AH//8AAP//AAP//wAA//8AAf//AAD//gAB//8AAP/+AAD//wAA//4AAH//
        AAD//gAAP/8AAP/+AAA//wAA//wAAD//AAD//AAAP/8AAP/8AAA//wAA//wAAD//AAD//AAAP/8AAP/8
        AAA//wAA//4AAH//AAD//gAA//8AAP//AAH//wAA//+AA///AAD//+AH//8AAP//+D///wAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>